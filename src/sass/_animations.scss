/*--- ScrollFade Specific ---*/

.scrollFade {
  opacity: 1;
  pointer-events: all;
}

.scrollFade--hidden {
  opacity: 0;
  pointer-events: none;
}

.scrollFade--visible {
  opacity: 1;
  pointer-events: all;
}

.scrollFade--animate {
  transition: opacity 0.8s ease-in-out;
}

// CUBE ANIMATION

$size: 70px;
$rotate-none: 0deg;
$rotate-quarter: 90deg;
$rotate-half: 180deg;
$rotate-three-quarters: 270deg;
$rotate-full: 360deg;

.cube-container {
  $perspective: 1000px;
  $origin: 50%;
  
  perspective: $perspective;
  perspective-origin: $origin;
  margin-left: $grid-3x;

  @media screen and (min-width: 768px) {
    margin-left: 0;
  }

  @media screen and (min-width: 1024px) {
    margin-left: 50px;
  }
}

.cube {
  position: relative;
  margin: 0 auto;
  width: $size;
  height: $size;
  font-family: $font-body;
  font-size: 14px;
  backface-visibility: hidden;
  outline: 1px solid transparent;
  box-shadow: 0 0 1px rgba(255, 255, 255, 0);
  
  transform-style: preserve-3d;
  animation: cube-rotation 90s infinite linear;
  will-change: transform;

  -webkit-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-transform-style: preserve-3d;

  -moz-backface-visibility: hidden;
  -moz-transform: translate3d(0, 0, 0);
  -moz-transform-style: preserve-3d;
  
  > div {
    $background: linear-gradient(135deg, $color-accent 0%, darken($color-accent, 30%) 100%);
    
    display: flex;
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0.6;
    border: 1px solid $color-accent;
    color: $color-accent;
    box-sizing: border-box;
  }
  
  &__face {
    align-items: center;
    justify-content: center;
    
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      outline: 1px solid $color-accent;
      filter: blur(0.5px);
    }
  }
  
  &__front {
    transform: translateZ($size / 2);
  }

  &__back {
    transform: translateZ(-$size / 2) rotateY($rotate-half);
  }

  &__top {
    transform: rotateX(-$rotate-three-quarters) translateY(-$size / 2);
    transform-origin: top center;
  }

  &__bottom {
    transform: rotateX($rotate-three-quarters) translateY($size / 2);
    transform-origin: bottom center;
  }

  &__left {
    transform: rotateY($rotate-three-quarters) translateX(-$size / 2);
    transform-origin: center left;
  }

  &__right {
    transform: rotateY(-$rotate-three-quarters) translateX($size / 2);
    transform-origin: center right;
  }
  
  span {
    color: $color-accent;
  }
}

@keyframes cube-rotation {
  from {
    transform: translate3d(0, 0, 0) rotateX($rotate-none) rotateY($rotate-none);
  }
  
  to {
    transform: translate3d(0, 0, 0) rotateX($rotate-full) rotateY($rotate-full);
  }
}
